
> mastra-first-project@1.0.0 lint
> eslint --ext .ts src --format=json

[{"filePath":"/home/facu/code/ai/mastra-first-project/src/mastra/agents/weather-agent.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/block-spacing","replacedBy":["@stylistic/ts/block-spacing"]},{"ruleId":"@typescript-eslint/comma-spacing","replacedBy":["@stylistic/ts/comma-spacing"]},{"ruleId":"@typescript-eslint/brace-style","replacedBy":["@stylistic/ts/brace-style"]},{"ruleId":"@typescript-eslint/func-call-spacing","replacedBy":["@stylistic/ts/func-call-spacing"]},{"ruleId":"@typescript-eslint/indent","replacedBy":["@stylistic/ts/indent"]},{"ruleId":"@typescript-eslint/key-spacing","replacedBy":["@stylistic/ts/key-spacing"]},{"ruleId":"@typescript-eslint/keyword-spacing","replacedBy":["@stylistic/ts/keyword-spacing"]},{"ruleId":"@typescript-eslint/lines-between-class-members","replacedBy":["@stylistic/ts/lines-between-class-members"]},{"ruleId":"@typescript-eslint/no-extra-parens","replacedBy":["@stylistic/ts/no-extra-parens"]},{"ruleId":"@typescript-eslint/object-curly-spacing","replacedBy":["@stylistic/ts/object-curly-spacing"]},{"ruleId":"@typescript-eslint/quotes","replacedBy":["@stylistic/ts/quotes"]},{"ruleId":"@typescript-eslint/semi","replacedBy":["@stylistic/ts/semi"]},{"ruleId":"@typescript-eslint/space-before-blocks","replacedBy":["@stylistic/ts/space-before-blocks"]},{"ruleId":"@typescript-eslint/space-before-function-paren","replacedBy":["@stylistic/ts/space-before-function-paren"]},{"ruleId":"@typescript-eslint/space-infix-ops","replacedBy":["@stylistic/ts/space-infix-ops"]},{"ruleId":"@typescript-eslint/comma-dangle","replacedBy":["@stylistic/ts/comma-dangle"]},{"ruleId":"@typescript-eslint/member-delimiter-style","replacedBy":["@stylistic/ts/member-delimiter-style"]},{"ruleId":"@typescript-eslint/type-annotation-spacing","replacedBy":["@stylistic/ts/type-annotation-spacing"]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"multiline-ternary","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]}]},{"filePath":"/home/facu/code/ai/mastra-first-project/src/mastra/index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/block-spacing","replacedBy":["@stylistic/ts/block-spacing"]},{"ruleId":"@typescript-eslint/comma-spacing","replacedBy":["@stylistic/ts/comma-spacing"]},{"ruleId":"@typescript-eslint/brace-style","replacedBy":["@stylistic/ts/brace-style"]},{"ruleId":"@typescript-eslint/func-call-spacing","replacedBy":["@stylistic/ts/func-call-spacing"]},{"ruleId":"@typescript-eslint/indent","replacedBy":["@stylistic/ts/indent"]},{"ruleId":"@typescript-eslint/key-spacing","replacedBy":["@stylistic/ts/key-spacing"]},{"ruleId":"@typescript-eslint/keyword-spacing","replacedBy":["@stylistic/ts/keyword-spacing"]},{"ruleId":"@typescript-eslint/lines-between-class-members","replacedBy":["@stylistic/ts/lines-between-class-members"]},{"ruleId":"@typescript-eslint/no-extra-parens","replacedBy":["@stylistic/ts/no-extra-parens"]},{"ruleId":"@typescript-eslint/object-curly-spacing","replacedBy":["@stylistic/ts/object-curly-spacing"]},{"ruleId":"@typescript-eslint/quotes","replacedBy":["@stylistic/ts/quotes"]},{"ruleId":"@typescript-eslint/semi","replacedBy":["@stylistic/ts/semi"]},{"ruleId":"@typescript-eslint/space-before-blocks","replacedBy":["@stylistic/ts/space-before-blocks"]},{"ruleId":"@typescript-eslint/space-before-function-paren","replacedBy":["@stylistic/ts/space-before-function-paren"]},{"ruleId":"@typescript-eslint/space-infix-ops","replacedBy":["@stylistic/ts/space-infix-ops"]},{"ruleId":"@typescript-eslint/comma-dangle","replacedBy":["@stylistic/ts/comma-dangle"]},{"ruleId":"@typescript-eslint/member-delimiter-style","replacedBy":["@stylistic/ts/member-delimiter-style"]},{"ruleId":"@typescript-eslint/type-annotation-spacing","replacedBy":["@stylistic/ts/type-annotation-spacing"]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"multiline-ternary","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]}]},{"filePath":"/home/facu/code/ai/mastra-first-project/src/mastra/tools/weather-tool.ts","messages":[{"ruleId":"@typescript-eslint/prefer-optional-chain","severity":2,"message":"Prefer using an optional chain expression instead, as it's more concise and easier to read.","line":56,"column":7,"nodeType":null,"messageId":"preferOptionalChain","endLine":56,"endColumn":58,"fix":{"range":[1389,1440],"text":"!geocodingData.results?.[0]"}},{"ruleId":"@typescript-eslint/strict-boolean-expressions","severity":2,"message":"Unexpected object value in conditional. The condition is always true.","line":56,"column":8,"nodeType":"MemberExpression","messageId":"conditionErrorObject","endLine":56,"endColumn":29},{"ruleId":"@typescript-eslint/strict-boolean-expressions","severity":2,"message":"Unexpected object value in conditional. The condition is always true.","line":56,"column":34,"nodeType":"MemberExpression","messageId":"conditionErrorObject","endLine":56,"endColumn":58},{"ruleId":"@typescript-eslint/strict-boolean-expressions","severity":2,"message":"Unexpected string value in conditional. An explicit empty string check is required.","line":109,"column":10,"nodeType":"MemberExpression","messageId":"conditionErrorString","endLine":109,"endColumn":26,"suggestions":[{"messageId":"conditionFixCompareStringLength","fix":{"range":[3116,3132],"text":"(conditions[code].length > 0)"},"desc":"Change condition to check string's length (`value.length !== 0`)"},{"messageId":"conditionFixCompareEmptyString","fix":{"range":[3116,3132],"text":"(conditions[code] !== \"\")"},"desc":"Change condition to check for empty string (`value !== \"\"`)"},{"messageId":"conditionFixCastBoolean","fix":{"range":[3116,3132],"text":"(Boolean(conditions[code]))"},"desc":"Explicitly cast value to a boolean (`Boolean(value)`)"}]}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import { createTool } from '@mastra/core/tools'\nimport { z } from 'zod'\n\ninterface GeocodingResponse {\n  results: Array<{\n    latitude: number\n    longitude: number\n    name: string\n  }>\n}\ninterface WeatherResponse {\n  current: {\n    time: string\n    temperature_2m: number\n    apparent_temperature: number\n    relative_humidity_2m: number\n    wind_speed_10m: number\n    wind_gusts_10m: number\n    weather_code: number\n  }\n}\n\nexport const weatherTool = createTool({\n  id: 'get-weather',\n  description: 'Get current weather for a location',\n  inputSchema: z.object({\n    location: z.string().describe('City name')\n  }),\n  outputSchema: z.object({\n    temperature: z.number(),\n    feelsLike: z.number(),\n    humidity: z.number(),\n    windSpeed: z.number(),\n    windGust: z.number(),\n    conditions: z.string(),\n    location: z.string()\n  }),\n  execute: async ({ context }) => {\n    return await getWeather(context.location)\n  }\n})\n\nconst getWeather = async (location: string): Promise<{\n  temperature: number\n  feelsLike: number\n  humidity: number\n  windSpeed: number\n  windGust: number\n  conditions: string\n  location: string\n}> => {\n  const geocodingUrl = `https://geocoding-api.open-meteo.com/v1/search?name=${encodeURIComponent(location)}&count=1`\n  const geocodingResponse = await fetch(geocodingUrl)\n  const geocodingData = (await geocodingResponse.json()) as GeocodingResponse\n\n  if (!geocodingData.results || !geocodingData.results[0]) {\n    throw new Error(`Location '${location}' not found`)\n  }\n\n  const { latitude, longitude, name } = geocodingData.results[0]\n\n  const weatherUrl = `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&current=temperature_2m,apparent_temperature,relative_humidity_2m,wind_speed_10m,wind_gusts_10m,weather_code`\n\n  const response = await fetch(weatherUrl)\n  const data = (await response.json()) as WeatherResponse\n\n  return {\n    temperature: data.current.temperature_2m,\n    feelsLike: data.current.apparent_temperature,\n    humidity: data.current.relative_humidity_2m,\n    windSpeed: data.current.wind_speed_10m,\n    windGust: data.current.wind_gusts_10m,\n    conditions: getWeatherCondition(data.current.weather_code),\n    location: name\n  }\n}\n\nfunction getWeatherCondition (code: number): string {\n  const conditions: Record<number, string> = {\n    0: 'Clear sky',\n    1: 'Mainly clear',\n    2: 'Partly cloudy',\n    3: 'Overcast',\n    45: 'Foggy',\n    48: 'Depositing rime fog',\n    51: 'Light drizzle',\n    53: 'Moderate drizzle',\n    55: 'Dense drizzle',\n    56: 'Light freezing drizzle',\n    57: 'Dense freezing drizzle',\n    61: 'Slight rain',\n    63: 'Moderate rain',\n    65: 'Heavy rain',\n    66: 'Light freezing rain',\n    67: 'Heavy freezing rain',\n    71: 'Slight snow fall',\n    73: 'Moderate snow fall',\n    75: 'Heavy snow fall',\n    77: 'Snow grains',\n    80: 'Slight rain showers',\n    81: 'Moderate rain showers',\n    82: 'Violent rain showers',\n    85: 'Slight snow showers',\n    86: 'Heavy snow showers',\n    95: 'Thunderstorm',\n    96: 'Thunderstorm with slight hail',\n    99: 'Thunderstorm with heavy hail'\n  }\n  return conditions[code] || 'Unknown'\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/block-spacing","replacedBy":["@stylistic/ts/block-spacing"]},{"ruleId":"@typescript-eslint/comma-spacing","replacedBy":["@stylistic/ts/comma-spacing"]},{"ruleId":"@typescript-eslint/brace-style","replacedBy":["@stylistic/ts/brace-style"]},{"ruleId":"@typescript-eslint/func-call-spacing","replacedBy":["@stylistic/ts/func-call-spacing"]},{"ruleId":"@typescript-eslint/indent","replacedBy":["@stylistic/ts/indent"]},{"ruleId":"@typescript-eslint/key-spacing","replacedBy":["@stylistic/ts/key-spacing"]},{"ruleId":"@typescript-eslint/keyword-spacing","replacedBy":["@stylistic/ts/keyword-spacing"]},{"ruleId":"@typescript-eslint/lines-between-class-members","replacedBy":["@stylistic/ts/lines-between-class-members"]},{"ruleId":"@typescript-eslint/no-extra-parens","replacedBy":["@stylistic/ts/no-extra-parens"]},{"ruleId":"@typescript-eslint/object-curly-spacing","replacedBy":["@stylistic/ts/object-curly-spacing"]},{"ruleId":"@typescript-eslint/quotes","replacedBy":["@stylistic/ts/quotes"]},{"ruleId":"@typescript-eslint/semi","replacedBy":["@stylistic/ts/semi"]},{"ruleId":"@typescript-eslint/space-before-blocks","replacedBy":["@stylistic/ts/space-before-blocks"]},{"ruleId":"@typescript-eslint/space-before-function-paren","replacedBy":["@stylistic/ts/space-before-function-paren"]},{"ruleId":"@typescript-eslint/space-infix-ops","replacedBy":["@stylistic/ts/space-infix-ops"]},{"ruleId":"@typescript-eslint/comma-dangle","replacedBy":["@stylistic/ts/comma-dangle"]},{"ruleId":"@typescript-eslint/member-delimiter-style","replacedBy":["@stylistic/ts/member-delimiter-style"]},{"ruleId":"@typescript-eslint/type-annotation-spacing","replacedBy":["@stylistic/ts/type-annotation-spacing"]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"multiline-ternary","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]}]},{"filePath":"/home/facu/code/ai/mastra-first-project/src/mastra/workflows/weather-workflow.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/block-spacing","replacedBy":["@stylistic/ts/block-spacing"]},{"ruleId":"@typescript-eslint/comma-spacing","replacedBy":["@stylistic/ts/comma-spacing"]},{"ruleId":"@typescript-eslint/brace-style","replacedBy":["@stylistic/ts/brace-style"]},{"ruleId":"@typescript-eslint/func-call-spacing","replacedBy":["@stylistic/ts/func-call-spacing"]},{"ruleId":"@typescript-eslint/indent","replacedBy":["@stylistic/ts/indent"]},{"ruleId":"@typescript-eslint/key-spacing","replacedBy":["@stylistic/ts/key-spacing"]},{"ruleId":"@typescript-eslint/keyword-spacing","replacedBy":["@stylistic/ts/keyword-spacing"]},{"ruleId":"@typescript-eslint/lines-between-class-members","replacedBy":["@stylistic/ts/lines-between-class-members"]},{"ruleId":"@typescript-eslint/no-extra-parens","replacedBy":["@stylistic/ts/no-extra-parens"]},{"ruleId":"@typescript-eslint/object-curly-spacing","replacedBy":["@stylistic/ts/object-curly-spacing"]},{"ruleId":"@typescript-eslint/quotes","replacedBy":["@stylistic/ts/quotes"]},{"ruleId":"@typescript-eslint/semi","replacedBy":["@stylistic/ts/semi"]},{"ruleId":"@typescript-eslint/space-before-blocks","replacedBy":["@stylistic/ts/space-before-blocks"]},{"ruleId":"@typescript-eslint/space-before-function-paren","replacedBy":["@stylistic/ts/space-before-function-paren"]},{"ruleId":"@typescript-eslint/space-infix-ops","replacedBy":["@stylistic/ts/space-infix-ops"]},{"ruleId":"@typescript-eslint/comma-dangle","replacedBy":["@stylistic/ts/comma-dangle"]},{"ruleId":"@typescript-eslint/member-delimiter-style","replacedBy":["@stylistic/ts/member-delimiter-style"]},{"ruleId":"@typescript-eslint/type-annotation-spacing","replacedBy":["@stylistic/ts/type-annotation-spacing"]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"multiline-ternary","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]}]}]
